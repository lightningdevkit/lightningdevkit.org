(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{451:function(e,t,n){"use strict";n.r(t);var a=n(7),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"private-key-management"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#private-key-management"}},[e._v("#")]),e._v(" Private Key Management")]),e._v(" "),t("p",[e._v("LDK provides a default implementation for key management, but you can choose to provide private keys to LDK in any way you wish following a simple API. LDK even supports a generic API for signing transactions, allowing you to run LDK without any private keys in memory and/or putting private keys only on hardware wallets.")]),e._v(" "),t("p",[e._v("While LDK's default implementation is currently located within the "),t("code",[e._v("rust-lightning")]),e._v(" crate, it is still considered a sample module.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/sign/struct.KeysManager.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("LDK's "),t("code",[e._v("KeysManager")]),e._v(" docs"),t("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=r.exports}}]);